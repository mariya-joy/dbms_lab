
Q14.Write a SELECT query to list all employees with their emp_id, emp_name, and
emp_salary.
SQL> select emp_id,emp_name,emp_salary from Employee9;

EMP_I EMP_NAME	      EMP_SALARY
----- --------------- ----------
2     Jennifer		   50000
3     Harry		   70000
4     Alice		   80000
5     Newman		   45000
1     Helen		   49500

Q15.Retrieve the emp_name, emp_salary, and emp_join_date for employees whose
salary is greater than 50000.
SQL> select emp_name,emp_salary,emp_join_date from Employee9 where emp_salary>50000;

EMP_NAME	EMP_SALARY EMP_JOIN_
--------------- ---------- ---------
Harry		     70000 13-NOV-19
Alice		     80000 05-MAY-23

Q16.List employees in the employee table ordered by emp_salary in descending order.
SQL> select * from Employee9 order by emp_salary desc;

EMP_I EMP_NAME	      EMP_SALARY EMP_JOIN_ DEPT_ EMP_EMAIL
----- --------------- ---------- --------- ----- ----------------------------------------------------------------------------------------------------
4     Alice		   80000 05-MAY-23 104
3     Harry		   70000 13-NOV-19 103
2     Jennifer		   50000 10-OCT-20 102
1     Helen		   49500 20-MAY-21 101
5     Newman		   45000 20-DEC-24 105

Q17.Retrieve all employees' names and salaries who joined after 01-01-2020.
SQL> select emp_name,emp_salary from Employee9 where emp_join_date>date'2020-01-01';

EMP_NAME	EMP_SALARY
--------------- ----------
Jennifer	     50000
Alice		     80000
Newman	     45000
Helen		     49500

Q18.Write a query to select all employees whose name starts with "J".
SQL> select emp_name from Employee9 where emp_name like 'J%';

EMP_NAME
---------------
Jennifer

Q19.Select the emp_name and emp_salary for employees whose salary is between 40000
and 60000.
SQL> select emp_name,emp_salary from Employee9 where emp_salary between 40000 and 60000;

EMP_NAME	EMP_SALARY
--------------- ----------
Jennifer	     50000
Newman	     45000
Helen		     49500


Q20.Write a query that groups employees by dept_id and shows the total salary per
department.
SQL> select dept_id,sum(emp_salary) as total_salary from Employee9 group by dept_id;

DEPT_ID   TOTAL_SALARY
----- ------------
104	     80000
105	     45000
101	     49500
103	     70000
102	     50000

Q21.Retrieve the department-wise average salary, but only for those departments with an
average salary above 60000.
SQL> select dept_id,avg(emp_salary) as avg_salary from Employee9 group by dept_id having avg(emp_salary)>60000;

DEPT_ AVG_SALARY
----- ----------
104	   80000
103	   70000

Q22.List the departments and the number of employees in each department who earn
above 50000.
SQL> select dept_id,count(*) as num_employees from Employee9 where emp_salary>50000 group by dept_id;

DEPT_ NUM_EMPLOYEES
----- -------------
104		  1
103		  1

Q23.Use HAVING to list departments that have more than 3 employees.
SQL> select dept_id,count(*) as total_employees from Employee9 group by dept_id having count(*)>3;

DEPT_ TOTAL_EMPLOYEES
----- ---------------
101		    4
102		    4
